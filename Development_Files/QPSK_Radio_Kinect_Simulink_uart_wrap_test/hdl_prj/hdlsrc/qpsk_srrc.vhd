-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\qpsk_srrc.vhd
-- Created: 2013-05-14 21:08:20
-- 
-- Generated by MATLAB 8.0 and HDL Coder 3.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: qpsk_srrc
-- Source Path: QPSK_Transmit_v12a/TX_SYSTEM_TOP/TX_CORE_DELAYED_SUBSYSTEM/TX_CORE/GEN_MOD_SHAPED_TX_DATA_PACKET/qpsk_srrc
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.TX_SYSTEM_TOP_pkg.ALL;

ENTITY qpsk_srrc IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        d_in_re                           :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        d_in_im                           :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        d_out_re                          :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En11
        d_out_im                          :   OUT   std_logic_vector(11 DOWNTO 0)  -- sfix12_En11
        );
END qpsk_srrc;


ARCHITECTURE rtl OF qpsk_srrc IS

  -- Constants
  CONSTANT nc                             : vector_of_signed14(0 TO 16) := ( to_signed(109, 14), to_signed(-95, 14), to_signed(-194, 14), to_signed(337, 14), to_signed(274, 14), 
                                                                           to_signed(-880, 14), to_signed(-332, 14), to_signed(3211, 14), to_signed(5518, 14), 
                                                                           to_signed(3211, 14), to_signed(-332, 14), to_signed(-880, 14), to_signed(274, 14), to_signed(337, 14), 
                                                                           to_signed(-194, 14), to_signed(-95, 14), to_signed(109, 14) );  -- sfix14 [17]

  -- Signals
  SIGNAL d_in_re_signed                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL d_in_im_signed                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL d_out_re_tmp                     : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL d_out_im_tmp                     : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL buf_re                           : vector_of_signed3(0 TO 16);  -- sfix3 [17]
  SIGNAL buf_im                           : vector_of_signed3(0 TO 16);  -- sfix3 [17]
  SIGNAL buf_next_re                      : vector_of_signed3(0 TO 16);  -- sfix3 [17]
  SIGNAL buf_next_im                      : vector_of_signed3(0 TO 16);  -- sfix3 [17]

BEGIN
  d_in_re_signed <= signed(d_in_re);

  d_in_im_signed <= signed(d_in_im);

  qpsk_srrc_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      buf_re <= (OTHERS => to_signed(0, 3));
      buf_im <= (OTHERS => to_signed(0, 3));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        buf_re <= buf_next_re;
        buf_im <= buf_next_im;
      END IF;
    END IF;
  END PROCESS qpsk_srrc_1_process;

  qpsk_srrc_1_output : PROCESS (d_in_re_signed, d_in_im_signed, buf_re, buf_im)
    VARIABLE c_re : signed(21 DOWNTO 0);
    VARIABLE c_im : signed(21 DOWNTO 0);
    VARIABLE ar : signed(2 DOWNTO 0);
    VARIABLE ai : signed(2 DOWNTO 0);
    VARIABLE cr : signed(16 DOWNTO 0);
    VARIABLE ci : signed(16 DOWNTO 0);
    VARIABLE buf_temp_re : vector_of_signed3(0 TO 16);
    VARIABLE buf_temp_im : vector_of_signed3(0 TO 16);
    VARIABLE add_cast : vector_of_signed23(0 TO 16);
    VARIABLE add_cast_0 : vector_of_signed23(0 TO 16);
    VARIABLE add_temp : vector_of_signed23(0 TO 16);
    VARIABLE add_cast_1 : vector_of_signed23(0 TO 16);
    VARIABLE add_cast_2 : vector_of_signed23(0 TO 16);
    VARIABLE add_temp_0 : vector_of_signed23(0 TO 16);
  BEGIN
    buf_temp_re(0 TO 15) := buf_re(1 TO 16);
    buf_temp_im(0 TO 15) := buf_im(1 TO 16);
    buf_temp_re(16) := d_in_re_signed(2 DOWNTO 0);
    buf_temp_im(16) := d_in_im_signed(2 DOWNTO 0);
    c_re := to_signed(0, 22);
    c_im := to_signed(0, 22);

    FOR k IN 0 TO 16 LOOP
      ar := buf_temp_re(k);
      ai := buf_temp_im(k);
      cr := ar * nc(k);
      ci := ai * nc(k);
      add_cast(k) := resize(c_re, 23);
      add_cast_0(k) := resize(cr, 23);
      add_temp(k) := add_cast(k) + add_cast_0(k);
      c_re := add_temp(k)(21 DOWNTO 0);
      add_cast_1(k) := resize(c_im, 23);
      add_cast_2(k) := resize(ci, 23);
      add_temp_0(k) := add_cast_1(k) + add_cast_2(k);
      c_im := add_temp_0(k)(21 DOWNTO 0);
    END LOOP;

    d_out_re_tmp <= c_re(14 DOWNTO 3);
    d_out_im_tmp <= c_im(14 DOWNTO 3);
    buf_next_re <= buf_temp_re;
    buf_next_im <= buf_temp_im;
  END PROCESS qpsk_srrc_1_output;


  d_out_re <= std_logic_vector(d_out_re_tmp);

  d_out_im <= std_logic_vector(d_out_im_tmp);

END rtl;

