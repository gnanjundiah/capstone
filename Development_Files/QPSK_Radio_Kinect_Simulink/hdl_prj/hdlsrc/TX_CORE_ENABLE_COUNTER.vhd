-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\TX_CORE_ENABLE_COUNTER.vhd
-- Created: 2013-05-26 21:23:03
-- 
-- Generated by MATLAB 8.0 and HDL Coder 3.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: TX_CORE_ENABLE_COUNTER
-- Source Path: QPSK_system_v3g/TX_SYSTEM_TOP/TX_CORE_ENABLE_COUNTER
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY TX_CORE_ENABLE_COUNTER IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        TX_CORE_ENABLE_COUNTER_RESET      :   IN    std_logic;
        Enable                            :   IN    std_logic;
        TX_CORE_ENABLE_COUNT              :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
        );
END TX_CORE_ENABLE_COUNTER;


ARCHITECTURE rtl OF TX_CORE_ENABLE_COUNTER IS

  -- Signals
  SIGNAL enb_gated                        : std_logic;
  SIGNAL Enable_out2                      : std_logic;
  SIGNAL Constant1_out1                   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Constant2_out1                   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Unit_Delay1_out1                 : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Sum_add_temp                     : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL Sum_out1                         : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL TX_CORE_ENABLE_COUNTER_RESET_1   : std_logic;
  SIGNAL Switch1_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Unit_Delay1_out1_last_value      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Unit_Delay1_out1_bypass          : unsigned(31 DOWNTO 0);  -- uint32

BEGIN
  Enable_out2 <= Enable;

  Constant1_out1 <= to_unsigned(1, 32);

  Constant2_out1 <= to_unsigned(0, 32);

  enb_gated <= Enable_out2 AND enb;

  Sum_add_temp <= resize(Constant1_out1, 33) + resize(Unit_Delay1_out1, 33);
  
  Sum_out1 <= "11111111111111111111111111111111" WHEN Sum_add_temp(32) /= '0' ELSE
      Sum_add_temp(31 DOWNTO 0);

  
  Compare_To_Constant_out1 <= '1' WHEN Unit_Delay1_out1 = 1 ELSE
      '0';

  TX_CORE_ENABLE_COUNTER_RESET_1 <= TX_CORE_ENABLE_COUNTER_RESET OR Compare_To_Constant_out1;

  
  Switch1_out1 <= Sum_out1 WHEN TX_CORE_ENABLE_COUNTER_RESET_1 = '0' ELSE
      Constant2_out1;

  Unit_Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay1_out1 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        Unit_Delay1_out1 <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay1_process;


  TX_CORE_ENABLE_COUNT_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay1_out1_last_value <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        Unit_Delay1_out1_last_value <= Unit_Delay1_out1;
      END IF;
    END IF;
  END PROCESS TX_CORE_ENABLE_COUNT_bypass_process;


  
  Unit_Delay1_out1_bypass <= Unit_Delay1_out1_last_value WHEN Enable_out2 = '0' ELSE
      Unit_Delay1_out1;

  TX_CORE_ENABLE_COUNT <= std_logic_vector(Unit_Delay1_out1_bypass);

END rtl;

